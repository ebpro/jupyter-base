name: Multi Arch QEMU CI

on:
  workflow_dispatch:
  schedule:
    - cron: '0 02 * * *'    
  push:
    branches:
      - 'releases/v*'
      - 'develop'
    tags:
      - 'v*.*.*'

env:
  MSTEAMS_WEBHOOK: ${{ secrets.MSTEAMS_WEBHOOK }}      

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    # strategy:
    #   matrix:
    #     ENV: ["", "community", "ultimate"]
    #     version: ["", latest]
    # env:
    #   ENV: ${{ matrix.ENV }}
    #   VERSION: ${{ matrix.VERSION }}
    runs-on: [self-hosted, qemu]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          dry_run: True
   
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - run: echo REPOSITORY_NAME=${GITHUB_REPOSITORY#*\/} >> $GITHUB_ENV
      - run: echo TAG_SUFFIX=${VERSION:+-$VERSION}${ENV:+-$ENV}  >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4     
        with:
          flavor: |
            latest=auto
            suffix=${{ env.TAG_SUFFIX }}
          images: |
            "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}"
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.description=A test for Docker CI with Github Actions.            

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Private registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.PRIVATEHUB_HOSTNAME }}
          username: ${{ secrets.PRIVATEHUB_USERNAME }}
          password: ${{ secrets.PRIVATEHUB_TOKEN }}          

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:       
          config-inline: |
            [registry."docker.io"]
              mirrors = ["${{ secrets.DOCKERHUB_PROXY_HOSTNAME }}"]
            [registry."${{ secrets.DOCKERHUB_PROXY_HOSTNAME }}"]
              http = true              
              insecure = true
            [registry."${{ secrets.PRIVATEHUB_HOSTNAME }}"]
              http = true
              insecure = true
          driver-opts: |
            network=host
          buildkitd-flags: |
            --debug 
            --allow-insecure-entitlement network.host
            --allow-insecure-entitlement security.insecure  

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: | 
            ENV=${{ matrix.ENV }}
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.PRIVATEHUB_HOSTNAME }}/${{ env.REPOSITORY_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.PRIVATEHUB_HOSTNAME }}/${{ env.REPOSITORY_NAME }}:buildcache,mode=min,compression=zstd

      # - name: Notify dedicated teams channel of Success
      #   uses: dragos-cojocari/ms-teams-notification@v1.0.2
      #   if: ${{ success() }}
      #   with:
      #     github-token: ${{ github.token }} # this will use the runner's token.
      #     ms-teams-webhook-uri: ${{ env.MSTEAMS_WEBHOOK }}
      #     notification-summary: "Build and Deploy success https://hub.docker.com/repository/docker/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}/general {{ env.DOCKER_METADATA_OUTPUT_TAGS }}"
      #     notification-color: 28a745
      #     timezone: Europe/Paris

      # - name: Notify dedicated teams channel of Success
      #   uses: dragos-cojocari/ms-teams-notification@v1.0.2
      #   if: ${{ failure() }}
      #   with:
      #     github-token: ${{ github.token }} # this will use the runner's token.
      #     ms-teams-webhook-uri: ${{ env.MSTEAMS_WEBHOOK }}
      #     notification-summary: "Build and Deploy failure https://hub.docker.com/repository/docker/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}/general ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}"
      #     notification-color: dc143c
      #     timezone: Europe/Paris

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}"          
